/*
 * grunt-tpsmate
 * https://github.com/lorrylockie/grunt-tpsmate
 *
 * Copyright (c) 2013 lorrylockie
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function(grunt) {

    var exec =require('child_process').exec;

    // Please see the Grunt documentation for more information regarding task
    // creation: http://gruntjs.com/creating-tasks

    grunt.registerMultiTask('tpsmate', 'Your task description goes here.', function() {
        // Merge task-specific and/or target-specific options with these defaults.
        var options = this.options({
            punctuation: '.',
            separator: ', ',
            argu:" upload "
        });

        // Iterate over all specified file groups.
        this.files.forEach(function(f) {
            // Concat specified files.
            var src = f.src.filter(function(filepath) {
                // Warn on and remove invalid source files (if nonull was set).
                if (!grunt.file.exists(filepath)) {
                    grunt.log.warn('Source file "' + filepath + '" not found.');
                    return false;
                } else {
                    return true;
                }
            }).map(function(filepath) {
                    var cmd = "tpsmate upload "+filepath +options.argu;
                    console.log(cmd);
                    // Read file source.
                    return  exec(cmd,function (error, stdout, stderr) {
                        console.log('stdout: ' + stdout);
                        console.log('stderr: ' + stderr);
                        if (error !== null) {
                            console.log('exec error: ' + error);
                        }
                    });
                });


        });
    });

};
